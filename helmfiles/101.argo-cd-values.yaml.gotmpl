config:
  secret:
    argocdServerAdminPassword: argo-cd.12345
    
server:
  url: https://argo-cd.{{ .Values.hostnameSuffix }}
  insecure: true
  ingress:
    enabled: true
    certManager: true
    hostname: argo-cd.{{ .Values.hostnameSuffix }}
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-cert-manager
  ingressGrpc:
    enabled: true
    hostname: argo-cd-grpc.{{ .Values.hostnameSuffix }}
    tls: true
    annotations:
      cert-manager.io/cluster-issuer: selfsigned-cert-manager

  # oidc.config:
  #   name: keycloak
  #   issuer: https://login.microsoftonline.com/TENANT_ID/v2.0
  #   clientID: CLIENT_ID
  #   clientSecret: $oidc.azuread.clientSecret
  #   requestedIDTokenClaims:
  #     groups:
  #       essential: true
  #   requestedScopes:
  #     - openid
  #     - profile
  #     - email
  # auth:
  #   mode: sso
  #   sso:
  #     enabled: true
  #     insecureSkipVerify: true
  #     config:
  #       issuer: http://keycloak.nxest.local/realms/master
  #       # kubectl -n argo-workflows create secret generic argo-workflows-sso --from-literal=clientId=xxxx --from-literal=clientSecret=xxx
  #       clientId:
  #         name: "argo-workflows-sso"
  #         key: "clientId"
  #       clientSecret:
  #         name: "argo-workflows-sso"
  #         key: "clientSecret"
  #       redirectUrl: "http://argo-workflows.nxest.local/oauth2/callback"
