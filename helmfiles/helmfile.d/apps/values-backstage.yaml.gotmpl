backstage:
  appConfig:
    app:
      baseUrl: https://backstage.{{ .Values.hostnameSuffix }}
    backend:
      baseUrl: https://backstage.{{ .Values.hostnameSuffix }}
      cors:
        origin: https://backstage.{{ .Values.hostnameSuffix }}
      database:
        client: better-sqlite3
        connection: ':memory:'
    techdocs:
      # techdocs.generator is used to configure how documentation sites are generated using MkDocs.

      generator:
        # techdocs.generator.runIn can be either 'docker' or 'local'. This is to determine how to run the generator - whether to
        # spin up the techdocs-container docker image or to run mkdocs locally (assuming all the dependencies are taken care of).
        # You want to change this to 'local' if you are running Backstage using your own custom Docker setup and want to avoid running
        # into Docker in Docker situation. Read more here
        # https://backstage.io/docs/features/techdocs/getting-started#disable-docker-in-docker-situation-optional

        runIn: 'docker'

        # (Optional) techdocs.generator.dockerImage can be used to control the docker image used during documentation generation. This can be useful
        # if you want to use MkDocs plugins or other packages that are not included in the default techdocs-container (spotify/techdocs).
        # NOTE: This setting is only used when techdocs.generator.runIn is set to 'docker'.

        dockerImage: 'spotify/techdocs'

        # (Optional) techdocs.generator.pullImage can be used to disable pulling the latest docker image by default. This can be useful when you are
        # using a custom techdocs.generator.dockerImage and you have a custom docker login requirement. For example, you need to login to
        # AWS ECR to pull the docker image.
        # NOTE: Disabling this requires the docker image was pulled by other means before running the techdocs generator.

        pullImage: true

        mkdocs:
          # (Optional)  techdocs.generator.omitTechdocsCoreMkdocsPlugin can be used to disable automatic addition of techdocs-core plugin to the mkdocs.yaml files.
          # Defaults to false, which means that the techdocs-core plugin is always added to the mkdocs file.
          omitTechdocsCorePlugin: false

          # (Optional and not recommended) Configures the techdocs generator to
          # attempt to ensure an index.md exists falling back to using <docs-dir>/README.md
          # or README.md in case a default <docs-dir>/index.md is not provided.
          # Note that https://www.mkdocs.org/user-guide/configuration/#edit_uri behavior
          # will be broken in these scenarios.
          legacyCopyReadmeMdToIndexMd: false

      builder: 'local'

      publisher:
        type: 'local'
        local:
          publishDirectory: '/tmp'

 


 



  

ingress:
  enabled: true
  host: backstage.{{ .Values.hostnameSuffix }}
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-cert-manager
  tls:
    enabled: true
    secretName: backstage.local-tls



      